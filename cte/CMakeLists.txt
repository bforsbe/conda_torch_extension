CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
PROJECT(CTE LANGUAGES CUDA CXX)

# set(CMAKE_PREFIX_PATH $ENV{CONDA_PREFIX})

set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${PROJECT_SOURCE_DIR}/cmake)


FIND_PACKAGE(Threads REQUIRED)
#FIND_PACKAGE(FFTW COMPONENTS FLOAT_THREADS_LIB REQUIRED)

set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

#CTE

set(CMAKE_POSITION_INDEPENDENT_CODE ON)

#INCLUDE(FindTIFF)

INCLUDE_DIRECTORIES(include ${PROJECT_SOURCE_DIR})
INCLUDE_DIRECTORIES("${CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES}")

find_package(Torch REQUIRED)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${TORCH_CXX_FLAGS}")
list(APPEND CMAKE_PREFIX_PATH "libtorch")


# message(STATUS "CONDA_PREFIX = $ENV{CONDA_PREFIX}")
message(STATUS "CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES = ${CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES}")
INCLUDE_DIRECTORIES("$ENV{CONDA_PREFIX}/include/python3.11")

FILE(GLOB_RECURSE SOURCES *.cpp) # cte/*.cu cte/*.cpp

SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++1y -w -fPIC -mavx2 -mf16c")
SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -pthread")

add_compile_definitions("FLOAT_PRECISION")

SET(CUDA_NVCC_FLAGS "${CUDA_NVCC_FLAGS};-w")
SET(CUDA_NVCC_FLAGS "${CUDA_NVCC_FLAGS};-restrict")
SET(CUDA_NVCC_FLAGS "${CUDA_NVCC_FLAGS};-use_fast_math")
SET(CUDA_NVCC_FLAGS "${CUDA_NVCC_FLAGS};-lineinfo")
SET(CUDA_NVCC_FLAGS "${CUDA_NVCC_FLAGS};-std=c++11")
SET(CUDA_NVCC_FLAGS "${CUDA_NVCC_FLAGS};-cudart=static")
#SET(CUDA_NVCC_FLAGS "${CUDA_NVCC_FLAGS};--ptxas-options=-v")

ADD_LIBRARY(CTE SHARED ${SOURCES})

set_target_properties(CTE PROPERTIES CUDA_ARCHITECTURES "52;61;75;86")

TARGET_LINK_LIBRARIES(CTE ${FFTW_LIBRARIES} libcudart.so libcufft.so libcublas.so libcurand.so libcusparse.so ${CMAKE_THREAD_LIBS_INIT} ${TORCH_LIBRARIES}) #libtiff.so